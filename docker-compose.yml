services:
  # FastAPI アプリケーション
  app:
    build: .
    container_name: amenonuboko-api
    ports:
      - "8000:8000"
    environment:
      - MYSQL_USER=amenonuboko_user
      - MYSQL_PASSWORD=amenonuboko_password
      - MYSQL_HOST=db
      - MYSQL_DATABASE=amenonuboko
      - MYSQL_PORT=3306
      - MICROCMS_URL=https://your-microcms.microcms.io/api/v1/contents
      - MICROCMS_API_KEY=your_microcms_api_key
      - LIMIT=100
      - CONNPASS_URL=https://connpass.com/api/v1/event/
      - CONNPASS_NICKNAME=your_connpass_nickname
      - SITE_ROOT_URL=http://localhost:8000
    volumes:
      # 開発時のファイル変更を反映（本番環境では削除）
      - ./app:/app/app
      - ./main.py:/app/main.py
      - ./config.py:/app/config.py
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - amenonuboko-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/amenonuboko/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL データベース
  db:
    image: mysql:8.0
    container_name: amenonuboko-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=amenonuboko
      - MYSQL_USER=amenonuboko_user
      - MYSQL_PASSWORD=amenonuboko_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf:/etc/mysql/conf.d
    restart: unless-stopped
    networks:
      - amenonuboko-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # phpMyAdmin (開発用)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: amenonuboko-phpmyadmin
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_USER=amenonuboko_user
      - PMA_PASSWORD=amenonuboko_password
      - MYSQL_ROOT_PASSWORD=root_password
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - amenonuboko-network
    profiles:
      - dev

  # Redis (キャッシュ用、オプション)
  redis:
    image: redis:7-alpine
    container_name: amenonuboko-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - amenonuboko-network
    profiles:
      - cache

  # Nginx (リバースプロキシ、本番用)
  nginx:
    image: nginx:alpine
    container_name: amenonuboko-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - amenonuboko-network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  amenonuboko-network:
    driver: bridge
